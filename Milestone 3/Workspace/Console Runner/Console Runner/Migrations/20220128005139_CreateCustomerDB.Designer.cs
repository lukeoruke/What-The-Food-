// <auto-generated />
using Class1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Console_Runner.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220128005139_CreateCustomerDB")]
    partial class CreateCustomerDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Console_Runner.Authorization+user_permissions", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AccountEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("permission")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("email");

                    b.HasIndex("AccountEmail");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("Logger.Logs", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Time")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("toLog")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Date", "Time", "toLog");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("User.Account", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("accessLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Email");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Console_Runner.Authorization+user_permissions", b =>
                {
                    b.HasOne("User.Account", null)
                        .WithMany("user_Permissions")
                        .HasForeignKey("AccountEmail");
                });

            modelBuilder.Entity("User.Account", b =>
                {
                    b.Navigation("user_Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
