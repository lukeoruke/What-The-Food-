// <auto-generated />
using Console_Runner.FoodService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Console_Runner.Migrations.ContextFoodDBMigrations
{
    [DbContext(typeof(ContextFoodDB))]
    partial class ContextFoodDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Console_Runner.FoodService.FoodItem", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductPic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Barcode");

                    b.ToTable("FoodItem");
                });

            modelBuilder.Entity("Console_Runner.FoodService.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlternateName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IngredientDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Console_Runner.FoodService.LabelIngredient", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.HasKey("Barcode", "IngredientID");

                    b.ToTable("LabelIngredients");
                });

            modelBuilder.Entity("Console_Runner.FoodService.LabelNutrient", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NutrientID")
                        .HasColumnType("int");

                    b.Property<float>("NutrientPercentage")
                        .HasColumnType("float");

                    b.HasKey("Barcode", "NutrientID");

                    b.ToTable("LabelNutrients");
                });

            modelBuilder.Entity("Console_Runner.FoodService.Nutrient", b =>
                {
                    b.Property<int>("NutrientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NutrientID");

                    b.ToTable("Nutrient");
                });

            modelBuilder.Entity("Console_Runner.FoodService.NutritionLabel", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AddedSugar")
                        .HasColumnType("int");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Cholesterol")
                        .HasColumnType("int");

                    b.Property<int>("DietaryFiber")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("SaturatedFat")
                        .HasColumnType("int");

                    b.Property<double>("ServingSize")
                        .HasColumnType("double");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<int>("Sodium")
                        .HasColumnType("int");

                    b.Property<int>("TotalCarbohydrate")
                        .HasColumnType("int");

                    b.Property<int>("TotalFat")
                        .HasColumnType("int");

                    b.Property<int>("TotalSugars")
                        .HasColumnType("int");

                    b.Property<int>("TransFat")
                        .HasColumnType("int");

                    b.HasKey("Barcode");

                    b.ToTable("NutritionLabel");
                });

            modelBuilder.Entity("Console_Runner.FoodService.Review", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserRating")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserReview")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Barcode", "UserID");

                    b.ToTable("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
